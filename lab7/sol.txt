Алгоритм случайного поиска


Количество попыток: 100
Лучшая попытка №1
Суммарная взвешенная длина соединений: 1233.3333333333333
1 -> 1
2 -> 2
3 -> 3
4 -> 5
5 -> 6
6 -> 7
7 -> 4

Худшая попытка №74
Суммарная взвешенная длина соединений: 1966.6666666666665
1 -> 1
2 -> 7
3 -> 2
4 -> 5
5 -> 3
6 -> 4
7 -> 6


Алгоритм последовательного поиска

Составим матрицу относительных расстояний
P | 5 6 7 2 3 4 1 | Sum
--|---------------|----
5 | 0 1 2 1 2 3 3 | 12
6 | 1 0 1 2 1 2 2 | 9
7 | 2 1 0 3 2 1 3 | 12
2 | 1 2 3 0 1 2 2 | 11
3 | 2 1 2 1 0 1 1 | 8
4 | 3 2 1 2 1 0 2 | 11
1 | 3 2 3 2 1 2 0 | 13

Видно, что наименьшая сумма относительных расстояний достигается при использовании вектора очередности позициий [3, 1, 2, 4, 6, 5, 7]

Составим матрицу взвешенной связанности
L | 1    2    3    4    5    6    7    | Sum
--|------------------------------------|----
1 | 0.0  50.0 50.0 0.0  0.0  0.0  0.0  | 100.0
2 | 50.0 0.0  50.0 0.0  0.0  0.0  0.0  | 100.0
3 | 50.0 50.0 0.0  0.0  33.3 0.0  33.3 | 166.7
4 | 0.0  0.0  0.0  0.0  33.3 83.3 0.0  | 116.7
5 | 0.0  0.0  33.3 33.3 0.0  33.3 33.3 | 133.3
6 | 0.0  0.0  0.0  83.3 33.3 0.0  50.0 | 166.7
7 | 0.0  0.0  33.3 0.0  33.3 50.0 0.0  | 116.7

Вектор очередности позиций
[3, 1, 2, 4, 6, 5, 7]

Вектор очередности размещения
[1, 2, 7, 4, 3, 5, 6]

В условии задано, что соединитель (мы выбрали элемент с индексом 1 в качестве соединителя) должен быть на 1 позиции.
Для этого скорректируем вектор очередности размещения элементов так, чтобы выполнялось условие.

Вектор очередности позиций
[3, 1, 2, 4, 6, 5, 7]

Вектор очередности размещения
[2, 1, 7, 4, 3, 5, 6]

Суммарная взвешенная длина соединений: 1466.6666666666667
2 -> 3
1 -> 1
7 -> 2
4 -> 4
3 -> 6
5 -> 5
6 -> 7